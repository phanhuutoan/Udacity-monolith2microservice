version: '3'
services:
  frontend: 
    ports:
      - 8100:80
    build:
      context: ./udagram-frontend
      dockerfile: Dockerfile
    environment:
      URL: ${URL}
      
  loadbalancer: 
    image: nginx
    volumes:
    - ./udagram-reverseproxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8181:80"
    command: [nginx-debug, '-g', 'daemon off;']
  
  backend-feed:
    build:
      context: ./udagram-api-feed/
      dockerfile: Dockerfile
    # ports:
    #   - "5001:5001"
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: ${AWS_PROFILE}
      JWT_SECRET: ${JWT_SECRET}
      URL: ${URL}
  
  backend-user:
    build:
      context: ./udagram-api-user/
      dockerfile: Dockerfile
    # ports:
    #   - "5002:5002"
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: ${AWS_PROFILE}
      JWT_SECRET: ${JWT_SECRET}
      URL: ${URL}